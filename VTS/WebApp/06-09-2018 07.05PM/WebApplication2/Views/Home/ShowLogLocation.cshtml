
@{
    ViewBag.Title = "ShowLogLocation";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 95vh; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
    </style>
</head>
<body>
   
   Lattitude: <label class="col-md-3 control-label" id="lat">@ViewBag.Lat </label>
   Longitude: <label class="col-md-3 control-label" id="Long">@ViewBag.Long </label>

    <!--The div element for the map -->
    <div id="map"></div>
    <script>
        // Initialize and add the map
        //initialize map and show location on map pass from calling form
        function initMap() {
            // The location of Uluru
            var uluru = { lat: 20.593684, lng: 78.962880 };
            var lat = document.getElementById('lat').innerHTML
            var Long = document.getElementById('Long').innerHTML
         
            var uluru1 = { lat: @ViewBag.Lat, lng: @ViewBag.Long};

            // The map, centered at Uluru
            var map = new google.maps.Map(
                document.getElementById('map'), { zoom: 5, center: uluru });
            // The marker, positioned at Uluru
            var marker = new google.maps.Marker({ position: uluru1, map: map });
            map.setZoom(15);
            map.panTo(marker.position);
        }
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDw6ylNYYy1CPEN_shphTXMhf-2yGCDXuI&callback=initMap">
    </script>
</body>
</html>
