<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCar" xml:space="preserve">
    <value>Add car: {0}.</value>
  </data>
  <data name="AddressQuery" xml:space="preserve">
    <value>Address query.</value>
  </data>
  <data name="AllreadyAuthorised" xml:space="preserve">
    <value>Allready authorised.</value>
  </data>
  <data name="AnswerSendingFailed" xml:space="preserve">
    <value>Failed to send answer.</value>
  </data>
  <data name="AnswerSent" xml:space="preserve">
    <value>Answer sent.</value>
  </data>
  <data name="AuthorisationCode" xml:space="preserve">
    <value>Authorisation code: {0}.</value>
  </data>
  <data name="AuthorisationFailed" xml:space="preserve">
    <value>Authorisation failed.</value>
  </data>
  <data name="AuthorisationSuccess" xml:space="preserve">
    <value>Authorisation success.</value>
  </data>
  <data name="AvrVersion" xml:space="preserve">
    <value>AVR version: {0}.</value>
  </data>
  <data name="BadCoordinates" xml:space="preserve">
    <value>Bad coordinates.</value>
  </data>
  <data name="BadFormat" xml:space="preserve">
    <value>Bad format.</value>
  </data>
  <data name="BadSignature" xml:space="preserve">
    <value>Bad signature.</value>
  </data>
  <data name="BadTime" xml:space="preserve">
    <value>Bad time.</value>
  </data>
  <data name="BufferInfo" xml:space="preserve">
    <value>Buffer length: {0}, offset: {1}, packet size: {2}.</value>
  </data>
  <data name="CarCreated" xml:space="preserve">
    <value>Car created.</value>
  </data>
  <data name="CheckingIP" xml:space="preserve">
    <value>Checking ip.</value>
  </data>
  <data name="Checksum" xml:space="preserve">
    <value>Checksum: {0}.</value>
  </data>
  <data name="CommandCompleted" xml:space="preserve">
    <value>Command completed.</value>
  </data>
  <data name="CommandFound" xml:space="preserve">
    <value>Command found: {0}.</value>
  </data>
  <data name="ComPort" xml:space="preserve">
    <value>COM port: {0}.</value>
  </data>
  <data name="DbError" xml:space="preserve">
    <value>DB error.</value>
  </data>
  <data name="DeviceAllreadyExists" xml:space="preserve">
    <value>Device allready exists: {0}.</value>
  </data>
  <data name="DeviceCreated" xml:space="preserve">
    <value>Device created.</value>
  </data>
  <data name="DeviceDoesntExist" xml:space="preserve">
    <value>Device doesn't exist: {0}.</value>
  </data>
  <data name="DeviceUpdated" xml:space="preserve">
    <value>Device updated: {0}.</value>
  </data>
  <data name="ErrorCode" xml:space="preserve">
    <value>Error code: {0}.</value>
  </data>
  <data name="FileSent" xml:space="preserve">
    <value>File sent.</value>
  </data>
  <data name="FirmwareFailed" xml:space="preserve">
    <value>Firmware select failed.</value>
  </data>
  <data name="FuelInputOutput" xml:space="preserve">
    <value>Output: {0} ({1} l), input: {2} ({3} l)</value>
  </data>
  <data name="GotFile" xml:space="preserve">
    <value>Got file.</value>
  </data>
  <data name="IdAccepted" xml:space="preserve">
    <value>ID accepted.</value>
  </data>
  <data name="IdNotFound" xml:space="preserve">
    <value>ID not found.</value>
  </data>
  <data name="IdRejected" xml:space="preserve">
    <value>ID rejected.</value>
  </data>
  <data name="ImeiOK" xml:space="preserve">
    <value>IMEI accepted.</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Input: {0}.</value>
  </data>
  <data name="InputL" xml:space="preserve">
    <value>Input, l: {0}.</value>
  </data>
  <data name="IPCheckFailed" xml:space="preserve">
    <value>IP check failed.</value>
  </data>
  <data name="IPCheckPassed" xml:space="preserve">
    <value>IP check passed.</value>
  </data>
  <data name="KeyAccepted" xml:space="preserve">
    <value>Key accepted.</value>
  </data>
  <data name="KeyReceived" xml:space="preserve">
    <value>Received key: {0}.</value>
  </data>
  <data name="KeyRejected" xml:space="preserve">
    <value>Key rejected.</value>
  </data>
  <data name="LengthSent" xml:space="preserve">
    <value>Length sent.</value>
  </data>
  <data name="MapGeneratedPerTime" xml:space="preserve">
    <value>Map rendered per {0}.</value>
  </data>
  <data name="MapQuery" xml:space="preserve">
    <value>Map query.</value>
  </data>
  <data name="MapRenderError" xml:space="preserve">
    <value>Map render error.</value>
  </data>
  <data name="MessageNotSent" xml:space="preserve">
    <value>Message not sent.</value>
  </data>
  <data name="MessageSent" xml:space="preserve">
    <value>Message sent.</value>
  </data>
  <data name="MessageType" xml:space="preserve">
    <value>Message type: {0}.</value>
  </data>
  <data name="NoAuthorisationObject" xml:space="preserve">
    <value>No authorisation object..</value>
  </data>
  <data name="NoSuchImei" xml:space="preserve">
    <value>IMEI don't exist.</value>
  </data>
  <data name="NoSuchType" xml:space="preserve">
    <value>No such type.</value>
  </data>
  <data name="NotAssignedToCar" xml:space="preserve">
    <value>Not assigned to car.</value>
  </data>
  <data name="NotAuthorised" xml:space="preserve">
    <value>Not authorised.</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Output: {0}.</value>
  </data>
  <data name="OutputL" xml:space="preserve">
    <value>Output, l: {0}.</value>
  </data>
  <data name="PacketSize" xml:space="preserve">
    <value>Packet size: {0}.</value>
  </data>
  <data name="PacketType" xml:space="preserve">
    <value>{0}: Packet type: {1}.</value>
  </data>
  <data name="ParsingFailed" xml:space="preserve">
    <value>Parsing failed.</value>
  </data>
  <data name="PIN" xml:space="preserve">
    <value>PIN: {0}.</value>
  </data>
  <data name="PositionSent" xml:space="preserve">
    <value>Position sent.</value>
  </data>
  <data name="QueryReceived" xml:space="preserve">
    <value>Received query.</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>Received: {0}</value>
  </data>
  <data name="ReceivedCommand" xml:space="preserve">
    <value>Received command: {0}.</value>
  </data>
  <data name="ReceivedCommandCode" xml:space="preserve">
    <value>Received command code: {0}.</value>
  </data>
  <data name="ReceivedData" xml:space="preserve">
    <value>Received data.</value>
  </data>
  <data name="ReceivedID" xml:space="preserve">
    <value>Received ID: {0}.</value>
  </data>
  <data name="ReceivedImei" xml:space="preserve">
    <value>Received IMEI: {0}.</value>
  </data>
  <data name="ReceivedLength" xml:space="preserve">
    <value>Received length: {0}.</value>
  </data>
  <data name="ReceivedMessage" xml:space="preserve">
    <value>Received message: {0}.</value>
  </data>
  <data name="ReceivedNumber" xml:space="preserve">
    <value>Received number: {0}.</value>
  </data>
  <data name="ReceivedOk" xml:space="preserve">
    <value>Received confirmation.</value>
  </data>
  <data name="ReceivedPacket" xml:space="preserve">
    <value>Received packet.</value>
  </data>
  <data name="ReceivedPacketLength" xml:space="preserve">
    <value>Received packet length: {0}.</value>
  </data>
  <data name="ReceivedSettingsResult" xml:space="preserve">
    <value>Received settings result.</value>
  </data>
  <data name="ReceivedUnknownData" xml:space="preserve">
    <value>Received unknown data.</value>
  </data>
  <data name="RemoveCar" xml:space="preserve">
    <value>Remove car: {0}.</value>
  </data>
  <data name="Removing" xml:space="preserve">
    <value>Removing {0}.</value>
  </data>
  <data name="SavedSettingsResult" xml:space="preserve">
    <value>Saved settings results.</value>
  </data>
  <data name="SendingAvrSettings" xml:space="preserve">
    <value>Sending AVR settings.</value>
  </data>
  <data name="SendingFailed" xml:space="preserve">
    <value>Sending failed.</value>
  </data>
  <data name="SendingFile" xml:space="preserve">
    <value>Sending file.</value>
  </data>
  <data name="SendingFirmwareVersion" xml:space="preserve">
    <value>Sending firmware version.</value>
  </data>
  <data name="SendingOK" xml:space="preserve">
    <value>Sending confirmation.</value>
  </data>
  <data name="SendingPositionTo" xml:space="preserve">
    <value>Sending position to {0}.</value>
  </data>
  <data name="SendingRandomBytes" xml:space="preserve">
    <value>Sending random bytes.</value>
  </data>
  <data name="SendingResult" xml:space="preserve">
    <value>Sending Result.</value>
  </data>
  <data name="SendingTelitSettings" xml:space="preserve">
    <value>Sending Telit settings.</value>
  </data>
  <data name="SendingUpdate" xml:space="preserve">
    <value>Sending 'U'.</value>
  </data>
  <data name="SessionIdAccepted" xml:space="preserve">
    <value>Session id accepted.</value>
  </data>
  <data name="SessionIdReceived" xml:space="preserve">
    <value>Session id received:{0}.</value>
  </data>
  <data name="SessionIdRejected" xml:space="preserve">
    <value>Session id rejected.</value>
  </data>
  <data name="SettingsFailed" xml:space="preserve">
    <value>Settings select failed.</value>
  </data>
  <data name="SignatureAccepted" xml:space="preserve">
    <value>Signature accepted.</value>
  </data>
  <data name="SignatureRejected" xml:space="preserve">
    <value>Signature rejected.</value>
  </data>
  <data name="SignaturesGotCalculated" xml:space="preserve">
    <value>Signatures: {0}, calculated: {1}.</value>
  </data>
  <data name="TooShortMessage" xml:space="preserve">
    <value>Too short message.</value>
  </data>
  <data name="TooShortPacket" xml:space="preserve">
    <value>Too short packet.</value>
  </data>
  <data name="UnknownAnswer" xml:space="preserve">
    <value>Unknown answer.</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>Unknown command.</value>
  </data>
  <data name="UnknownPacketType" xml:space="preserve">
    <value>Unknown packet type.</value>
  </data>
  <data name="UnknownQuery" xml:space="preserve">
    <value>Unknown query.</value>
  </data>
  <data name="UpdateFailed" xml:space="preserve">
    <value>Update failed..</value>
  </data>
  <data name="UpdateSuccess" xml:space="preserve">
    <value>Update success.</value>
  </data>
  <data name="UserTypeRealTime" xml:space="preserve">
    <value>User type: real time position listener.</value>
  </data>
  <data name="WaitingForCar" xml:space="preserve">
    <value>Waiting for car.</value>
  </data>
  <data name="WaitingForKey" xml:space="preserve">
    <value>Waiting for key.</value>
  </data>
  <data name="WaitingForNextCommandCode" xml:space="preserve">
    <value>Waiting for next command code.</value>
  </data>
  <data name="WaitingForSessionId" xml:space="preserve">
    <value>Waiting for session id.</value>
  </data>
</root>